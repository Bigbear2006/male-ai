# Generated by Django 5.2.1 on 2025-05-25 14:50

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('suitable_for', models.CharField(max_length=255, verbose_name='Подходит для')),
            ],
            options={
                'verbose_name': 'Челлендж',
                'verbose_name_plural': 'Челленджи',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('url', models.URLField(verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Микро курс',
                'verbose_name_plural': 'Микро курсы',
                'ordering': ['title'],
            },
        ),
        migrations.AlterField(
            model_name='survey',
            name='support_option',
            field=models.CharField(choices=[('calm_reminder', 'Спокойное напоминание: ты можешь'), ('direct_challenge', 'Прямой вызов: давай, соберись'), ('question', 'Что ты чувствуешь и готов сделать?')], max_length=50, verbose_name='Что больше помогает, когда что-то идёт не так'),
        ),
        migrations.CreateModel(
            name='ChallengeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='День')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('setup', models.CharField(max_length=255, verbose_name='Установка')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.challenge', verbose_name='Челлендж')),
            ],
            options={
                'verbose_name': 'Задание челленджа',
                'verbose_name_plural': 'Задание челленджей',
                'ordering': ['title'],
                'unique_together': {('challenge', 'day')},
            },
        ),
        migrations.CreateModel(
            name='ChallengeTaskQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.challengetask', verbose_name='Задание челленджа')),
            ],
            options={
                'verbose_name': 'Вопрос к заданию челленджа',
                'verbose_name_plural': 'Вопросы к заданиям челленджей',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='DailyCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifest_type', models.CharField(choices=[('calm', 'Спокойно'), ('focus', 'С фокусом'), ('pressure', 'С напором'), ('pace', 'С темпом')], max_length=20, verbose_name='Как хочет проявиться')),
                ('morning_wellbeing', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Самочувствие утром')),
                ('success_result', models.TextField(verbose_name='Что удалось')),
                ('fail_result', models.TextField(verbose_name='Что не получилось и почему')),
                ('feelings', models.TextField(verbose_name='Что почувствовал')),
                ('evening_wellbeing', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Самочувствие вечером')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_cycles', to='core.client', unique_for_date='created_at', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ежедневный цикл',
                'verbose_name_plural': 'Ежедневные циклы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DayResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=255, verbose_name='Что получилось лучше, чем вчера')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days_results', to='core.client', unique_for_date='created_at', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ежедневные результаты',
                'verbose_name_plural': 'Результат дня',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='core.challenge', verbose_name='Челлендж')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to='core.client', verbose_name='Пользователь')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('client', 'challenge')},
            },
        ),
        migrations.CreateModel(
            name='ClientChallengeTaskQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, verbose_name='Ответ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.client', verbose_name='Пользователь')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='core.challengetaskquestion', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос челленджа',
                'verbose_name_plural': 'Ответы на вопросы челленджей',
                'ordering': ['-created_at'],
                'unique_together': {('client', 'question')},
            },
        ),
    ]
